h1. Answers Default Data Plugin


h1. Overview

The Initialization plugin component is used to define the default answers data in _xml_ or _zip_ file. It includes categories of question and that should be exported from a eXo Answers application.

When Answers Service starts, it will get values which are returned from Initialization plugin component to initialize the default Answers data.



h1. Configuration

h2. Default Answers data

The default Answers data is configured in _services-configuration.xml_ file.

In details:

At the run time of Answers Service, Initailization plugin component is called, then _services-configuration.xml_ file is executed, the component-plugin named _addInitialDataPlugin_ will be referred to _org.exoplatform.faq.service.InitializeDataPlugin_ to excute some objects to create default data for the forum application. 

The default data in the _.zip_ file is initialized 

{code:xml}
<component-plugin>
      <name>technical-faq</name>
      <set-method>addInitialDataPlugin</set-method>
      <type>org.exoplatform.faq.service.InitialDataPlugin</type>
      <description>Initialize</description>
      <init-params>
        <value-param>
          <name>location</name>
          <description>location where Answers export format file is stored</description>
          <value>war:/data/Technical-FAQ.zip</value>
        </value-param>
      </init-params>
    </component-plugin>
{code}

* In which,
|| Name || Method | Type || Description ||
| technical-faq | addInitialDataPlugin | org.exoplatform.faq.service.InitialDataPlugin | Initialize |

* Init-param
|| Name || Possible value | Default value || Description ||
| location | {{string}} | war:/data/Technical-FAQ.zip | location where Answers export format file is stored. |

If the default data is in the ~~xml~~ format

{code:xml}
<value>war:/data/Technical-FAQ.xml</value>
{code}

By default, the default Answers data can only import if the importing categories does not exist in database.

To initialize default data in multiple files, it is required to declare them in multiple plugin.

{code:xml}
<component-plugin>

.....

</component-plugin>
{code}





