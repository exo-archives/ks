<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
	xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">
	<external-component-plugins>
		<!-- The full qualified name of the ListenerService -->
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
			<!-- The name of the listener that is also the name of the target event -->
			<name>org.exoplatform.web.GenericHttpListener.sessionCreated</name>
			<!-- The name of the method to call on the ListenerService in order to register the Listener -->
			<set-method>addListener</set-method>
			<!-- The full qualified name of the Listener -->
			<type>org.exoplatform.sample.portal.web.SampleHttpSessionCreatedListener</type>
		</component-plugin>
		<component-plugin>
			<!-- The name of the listener that is also the name of the target event -->
			<name>org.exoplatform.web.GenericHttpListener.sessionDestroyed</name>
			<!-- The name of the method to call on the ListenerService in order to register the Listener -->
			<set-method>addListener</set-method>
			<!-- The full qualified name of the Listener -->
			<type>org.exoplatform.sample.portal.web.SampleHttpSessionDestroyedListener</type>
		</component-plugin>
		<component-plugin>
			<!-- The name of the listener that is also the name of the target event -->
			<name>org.exoplatform.web.GenericHttpListener.contextInitialized</name>
			<!-- The name of the method to call on the ListenerService in order to register the Listener -->
			<set-method>addListener</set-method>
			<!-- The full qualified name of the Listener -->
			<type>org.exoplatform.sample.portal.web.SampleContextInitializedListener</type>
		</component-plugin>
		<component-plugin>
			<!-- The name of the listener that is also the name of the target event -->
			<name>org.exoplatform.web.GenericHttpListener.contextDestroyed</name>
			<!-- The name of the method to call on the ListenerService in order to register the Listener -->
			<set-method>addListener</set-method>
			<!-- The full qualified name of the Listener -->
			<type>org.exoplatform.sample.portal.web.SampleContextDestroyedListener</type>
		</component-plugin>
	</external-component-plugins>
	<external-component-plugins>
		<!-- The full qualified name of the ExtensibleFilter -->
		<target-component>org.exoplatform.web.filter.ExtensibleFilter</target-component>
		<component-plugin>
			<!-- The name of the plugin -->
			<name>Sample Filter Definition Plugin</name>
			<!-- The name of the method to call on the ExtensibleFilter in order to register the FilterDefinitions -->
			<set-method>addFilterDefinitions</set-method>
			<!-- The full qualified name of the FilterDefinitionPlugin -->
			<type>org.exoplatform.web.filter.FilterDefinitionPlugin</type>
			<init-params>
				<object-param>
					<name>Sample Filter Definition</name>
					<object type="org.exoplatform.web.filter.FilterDefinition">
						<!-- The filter instance -->
						<field name="filter"><object type="org.exoplatform.sample.portal.web.SampleFilter"/></field>
						<!-- The mapping to use -->
						<!-- WARNING: the mapping is expressed with regular expressions -->
						<field name="patterns">
							<collection type="java.util.ArrayList" item-type="java.lang.String">
								<value>
									<string>/.*</string>
								</value>
							</collection>
						</field>
					</object>
				</object-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>
</configuration>