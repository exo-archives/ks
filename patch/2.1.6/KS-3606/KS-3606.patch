Index: eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java
===================================================================
--- eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(revision 72550)
+++ eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(working copy)
@@ -95,6 +95,7 @@
 import org.exoplatform.services.log.Log;
 import org.exoplatform.services.mail.MailService;
 import org.exoplatform.services.mail.Message;
+import org.exoplatform.services.security.ConversationState;
 
 import com.sun.syndication.feed.synd.SyndContent;
 import com.sun.syndication.feed.synd.SyndContentImpl;
@@ -166,10 +167,11 @@
 		}*/		
   }
 
-  /* (non-Javadoc)
-   * @see org.exoplatform.faq.service.impl.DataStorage#isAdminRole(java.lang.String)
-   */
   public boolean isAdminRole(String userName) throws Exception {
+    String name = userName;
+    if (name == null) {
+      name = ConversationState.getCurrent().getIdentity().getUserId();
+    }
     SessionProvider sProvider = SessionProvider.createSystemProvider() ;		
     try {
       Node cateHomeNode = getCategoryHome(sProvider, null);
@@ -178,7 +180,7 @@
         list.addAll(rulesPlugins_.get(i).getRules(this.ADMIN_));				
         if(cateHomeNode.hasProperty("exo:moderators")) 
           list.addAll(Utils.valuesToList(cateHomeNode.getProperty("exo:moderators").getValues())) ;
-        if(list.contains(userName)) return true;
+        if(list.contains(name)) return true;
         if(Utils.hasPermission(list, UserHelper.getAllGroupAndMembershipOfUser(userName))) return true;
       }
     } catch (Exception e) {
@@ -3329,9 +3331,6 @@
     return false ;
   }
 
-  /* (non-Javadoc)
-   * @see org.exoplatform.faq.service.impl.DataStorage#isCategoryModerator(java.lang.String, java.lang.String)
-   */
   public boolean isCategoryModerator(String categoryId, String user) throws Exception {
     SessionProvider sProvider = SessionProvider.createSystemProvider() ;
     boolean isCalMod = false;
Index: eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/DataStorage.java
===================================================================
--- eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/DataStorage.java	(revision 72550)
+++ eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/DataStorage.java	(working copy)
@@ -41,6 +41,12 @@
 
   void addInitRssPlugin(ComponentPlugin plugin) throws Exception;
 
+  /**
+   * @param userName userName
+   * @return true if userName has admin role. The current user is implied if
+   *         userName is null.
+   * @throws Exception
+   */
   boolean isAdminRole(String userName) throws Exception;
 
   List<String> getAllFAQAdmin() throws Exception;
@@ -208,6 +214,13 @@
 
   boolean isViewAuthorInfo(String id) throws Exception;
 
+  /**
+   * @param categoryId id of category
+   * @param user username
+   * @return true if user is moderator of the category. The current user is
+   *         implied if user is null.
+   * @throws Exception
+   */
   boolean isCategoryModerator(String categoryId, String user) throws Exception;
 
   boolean isCategoryExist(String name, String path);
Index: eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/FAQService.java
===================================================================
--- eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/FAQService.java	(revision 72550)
+++ eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/FAQService.java	(working copy)
@@ -516,7 +516,7 @@
   /**
    * Check permission of user
    * @param userName	id or user name of user who is checked permission
-   * @return	return <code>true</code> if user is addmin and <code>false</code> if opposite
+   * @return	return <code>true</code> if user is admin. The current user is implied if userName is null.
    * @throws Exception
    */
   public boolean isAdminRole(String userName) throws Exception ;
@@ -607,6 +607,13 @@
 
   public QuestionPageList getListMailInWatch(String categoryId) throws Exception ;
 
+  /**
+   * 
+   * @param categoryId categoryId
+   * @param user user
+   * @return true if user is moderator. The current user is implied if user is null.
+   * @throws Exception
+   */
   public boolean isCategoryModerator(String categoryId, String user) throws Exception  ;
 
   //Multi language apis
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuickSearch.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuickSearch.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuickSearch.java	(working copy)
@@ -58,7 +58,7 @@
 		FAQUtils.getPorletPreference(faqSetting_);
 		if(currentUser != null && currentUser.trim().length() > 0){
 			if(faqSetting_.getIsAdmin() == null || faqSetting_.getIsAdmin().trim().length() < 1){
-				if(faqService_.isAdminRole(currentUser)) faqSetting_.setIsAdmin("TRUE");
+				if(faqService_.isAdminRole(null)) faqSetting_.setIsAdmin("TRUE");
 				else faqSetting_.setIsAdmin("FALSE");
 			}
 			faqService_.getUserSetting(currentUser, faqSetting_);
@@ -82,7 +82,7 @@
 				List<ObjectSearchResult> list = null ;
 				FAQEventQuery eventQuery = new FAQEventQuery();
 				eventQuery.setAdmin(uiQuickSearch.faqSetting_.isAdmin()) ;
-			  eventQuery.setUserMembers(UserHelper.getAllGroupAndMembershipOfUser(FAQUtils.getCurrentUser()));
+			  eventQuery.setUserMembers(UserHelper.getAllGroupAndMembershipOfUser(null));
 			  eventQuery.setUserId(FAQUtils.getCurrentUser()) ;
 				eventQuery.setText(text);
 				eventQuery.setType("categoryAndQuestion");
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java	(working copy)
@@ -182,10 +182,9 @@
   public void setListQuestion() throws Exception {
     listQuestion_.clear() ;
     listQuestionNotYetAnswered_.clear() ;
-    String user = FAQUtils.getCurrentUser() ;
     pageIterator = this.getChildById(LIST_QUESTION_INTERATOR) ;
     pageQuesNotAnswerIterator = this.getChildById(LIST_QUESTION_NOT_ANSWERED_INTERATOR) ;
-    List<String>userPrivates = UserHelper.getAllGroupAndMembershipOfUser(FAQUtils.getCurrentUser());
+    List<String>userPrivates = UserHelper.getAllGroupAndMembershipOfUser(null);
     if(faqSetting_.isAdmin()) {
     	if(this.cateId_.equals(Utils.ALL)){
     		this.pageList = getFAQService().getAllQuestions() ;
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICommentForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICommentForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICommentForm.java	(working copy)
@@ -16,8 +16,6 @@
  */
 package org.exoplatform.faq.webui.popup;
 
-import javax.servlet.http.HttpServletRequest;
-
 import org.exoplatform.container.PortalContainer;
 import org.exoplatform.faq.rendering.RenderHelper;
 import org.exoplatform.faq.service.Comment;
@@ -37,8 +35,6 @@
 import org.exoplatform.ks.common.webui.BaseEventListener;
 import org.exoplatform.ks.common.webui.BaseUIForm;
 import org.exoplatform.ks.common.webui.UIPopupAction;
-import org.exoplatform.portal.application.PortalRequestContext;
-import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.webui.config.annotation.ComponentConfig;
 import org.exoplatform.webui.config.annotation.EventConfig;
 import org.exoplatform.webui.core.UIPopupComponent;
@@ -226,7 +222,7 @@
 				if(!commentForm.languageSelected.equals(commentForm.question_.getLanguage())) language = commentForm.languageSelected ;  
 				String currentUser = FAQUtils.getCurrentUser() ;
 				commentForm.comment.setCommentBy(currentUser) ;
-				commentForm.comment.setFullName(FAQUtils.getFullName(currentUser)) ;
+				commentForm.comment.setFullName(FAQUtils.getFullName(null)) ;
 				commentForm.faqService.saveComment(commentForm.question_.getPath(), commentForm.comment, language);
 				if(!commentForm.languageSelected.equals(commentForm.question_.getLanguage())) {
 					try {
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionForm.java	(working copy)
@@ -24,8 +24,6 @@
 import java.util.Locale;
 import java.util.Map;
 
-import javax.jcr.Node;
-
 import org.exoplatform.container.PortalContainer;
 import org.exoplatform.faq.service.FAQSetting;
 import org.exoplatform.faq.service.FileAttachment;
@@ -38,7 +36,6 @@
 import org.exoplatform.faq.webui.UIQuestions;
 import org.exoplatform.faq.webui.ValidatorDataInput;
 import org.exoplatform.forum.service.ForumService;
-import org.exoplatform.forum.service.ForumServiceUtils;
 import org.exoplatform.forum.service.Topic;
 import org.exoplatform.forum.service.Utils;
 import org.exoplatform.ks.common.UserHelper;
@@ -48,7 +45,6 @@
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.resources.LocaleConfig;
 import org.exoplatform.services.resources.LocaleConfigService;
-import org.exoplatform.services.jcr.ext.common.SessionProvider;
 import org.exoplatform.webui.config.annotation.ComponentConfig;
 import org.exoplatform.webui.config.annotation.EventConfig;
 import org.exoplatform.webui.core.UIPopupComponent;
@@ -60,9 +56,9 @@
 import org.exoplatform.webui.form.UIFormCheckBoxInput;
 import org.exoplatform.webui.form.UIFormInputInfo;
 import org.exoplatform.webui.form.UIFormInputWithActions;
+import org.exoplatform.webui.form.UIFormInputWithActions.ActionData;
 import org.exoplatform.webui.form.UIFormSelectBox;
 import org.exoplatform.webui.form.UIFormStringInput;
-import org.exoplatform.webui.form.UIFormInputWithActions.ActionData;
 import org.exoplatform.webui.form.wysiwyg.UIFormWYSIWYGInput;
 
 
@@ -263,7 +259,7 @@
   	try {
   		if(faqSetting_.isAdmin() || isMode) {
   			isMode = true;
-  		} else isMode =getFAQService().isCategoryModerator(categoryId_, FAQUtils.getCurrentUser());
+  		} else isMode =getFAQService().isCategoryModerator(categoryId_, null);
     } catch (Exception e) {e.printStackTrace();}
     return isMode;
 	}
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISettingForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISettingForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISettingForm.java	(working copy)
@@ -137,11 +137,8 @@
 	}
 	
 	private void setListCate() throws Exception {
-		String userName = FAQUtils.getCurrentUser();
 		List<String>userPrivates = null;
-		if(userName != null){
-			userPrivates = UserHelper.getAllGroupAndMembershipOfUser(userName);
-		}
+		userPrivates = UserHelper.getAllGroupAndMembershipOfUser(null);
 		this.listCate.addAll(FAQUtils.getFAQService().listingCategoryTree()) ;
 
 	}
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIAdvancedSearchForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIAdvancedSearchForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIAdvancedSearchForm.java	(working copy)
@@ -88,7 +88,7 @@
 		FAQUtils.getPorletPreference(faqSetting_);
 		if(currentUser != null && currentUser.trim().length() > 0){
 			if(faqSetting_.getIsAdmin() == null || faqSetting_.getIsAdmin().trim().length() < 1){
-				if(getFAQService().isAdminRole(currentUser)) faqSetting_.setIsAdmin("TRUE");
+				if(getFAQService().isAdminRole(null)) faqSetting_.setIsAdmin("TRUE");
 				else faqSetting_.setIsAdmin("FALSE");
 			}
 			getFAQService().getUserSetting(currentUser, faqSetting_);
@@ -344,7 +344,7 @@
 
 			String userName = FAQUtils.getCurrentUser();
 			eventQuery.setUserId(userName) ;
-			eventQuery.setUserMembers(UserHelper.getAllGroupAndMembershipOfUser(userName));
+			eventQuery.setUserMembers(UserHelper.getAllGroupAndMembershipOfUser(null));
 			eventQuery.setAdmin(Boolean.parseBoolean(advancedSearch.faqSetting_.getIsAdmin()));
 			
 			UIAnswersPortlet uiPortlet = advancedSearch.getAncestorOfType(UIAnswersPortlet.class);
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISendMailForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISendMailForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UISendMailForm.java	(working copy)
@@ -133,8 +133,8 @@
 		String name = "" ;
 		String userName = FAQUtils.getCurrentUser() ;
 		if(!FAQUtils.isFieldEmpty(userName)){
-			name = FAQUtils.getFullName(userName) ;
-			email = FAQUtils.getEmailUser(userName) ;
+		  name = FAQUtils.getFullName(null) ;
+		  email = FAQUtils.getEmailUser(null) ;
 		}
 		languageIsResponsed = question.getLanguage() ;
 		QuestionLanguage questionLanguage = new QuestionLanguage() ;
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveQuestionForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveQuestionForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveQuestionForm.java	(working copy)
@@ -105,7 +105,7 @@
 			UIAnswersPortlet portlet = moveQuestionForm.getAncestorOfType(UIAnswersPortlet.class) ;
       UIQuestions questions = portlet.getChild(UIAnswersContainer.class).getChild(UIQuestions.class) ;
 			try{
-				if(!moveQuestionForm.faqSetting_.isAdmin() && !faqService_.isCategoryModerator(cateId, FAQUtils.getCurrentUser())){
+				if(!moveQuestionForm.faqSetting_.isAdmin() && !faqService_.isCategoryModerator(cateId, null)){
 					warning("UIQuestions.msg.can-not-move-question") ;
 					return;
 				}
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIResponseForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIResponseForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIResponseForm.java	(working copy)
@@ -336,7 +336,7 @@
 						answer.setDateResponse(new Date());
 						String currentUser = FAQUtils.getCurrentUser() ;
 						answer.setResponseBy(currentUser);
-						answer.setFullName(FAQUtils.getFullName(currentUser)) ;
+						answer.setFullName(FAQUtils.getFullName(null)) ;
 						answer.setNew(true);
 						answer.setResponses(responseQuestionContent);
 						answer.setLanguage(language) ;
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveCategoryForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveCategoryForm.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIMoveCategoryForm.java	(working copy)
@@ -96,7 +96,7 @@
 			String categoryId = moveCategory.getCategoryID() ;
 			try {
 				boolean canMove = moveCategory.faqSetting_.isAdmin();
-				if(!canMove) canMove = faqService_.isCategoryModerator(destCategoryId, FAQUtils.getCurrentUser()) ;
+				if(!canMove) canMove = faqService_.isCategoryModerator(destCategoryId, null) ;
 				if(canMove){
 					faqService_.moveCategory(categoryId, destCategoryId) ;
 				}else {
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIUserWatchManager.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIUserWatchManager.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIUserWatchManager.java	(working copy)
@@ -83,7 +83,7 @@
 		super("UIUswerWatchManager");
 		addChild(UIAnswersPageIterator.class, null, LIST_QUESTIONS_WATCHED) ;
 	  addChild(UIAnswersPageIterator.class, null, LIST_CATES_WATCHED) ;
-	  emailAddress = FAQUtils.getEmailUser(FAQUtils.getCurrentUser());
+	  emailAddress = FAQUtils.getEmailUser(null);
 		this.setActions(new String[]{"Cancel"}) ;
 	}
 	
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIAnswersContainer.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIAnswersContainer.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIAnswersContainer.java	(working copy)
@@ -60,7 +60,7 @@
   	FAQUtils.getPorletPreference(faqSetting_);
   	faqSetting_.setCurrentUser(currentUser_);
   	if(!FAQUtils.isFieldEmpty(currentUser_)){
-  		if(faqService_.isAdminRole(currentUser_)) faqSetting_.setIsAdmin("TRUE");
+  		if(faqService_.isAdminRole(null)) faqSetting_.setIsAdmin("TRUE");
   		else faqSetting_.setIsAdmin("FALSE");
   		faqService_.getUserSetting(currentUser_, faqSetting_);
   	} else {
@@ -68,7 +68,7 @@
   	}
   	String cateIdView = Utils.CATEGORY_HOME;
   	if(!faqSetting_.isAdmin() && !faqSetting_.isPostQuestionInRootCategory()){
-  		propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(currentUser_);
+  		propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(null);
   		List<Category> cates = faqService_.getSubCategories(cateIdView,faqSetting_, false, propetyOfUser);
   		if(cates != null && cates.size() > 0)
   			cateIdView = cateIdView + "/" + cates.get(0).getId();
@@ -112,13 +112,13 @@
   				faqSetting_.setCanEdit(true);
   			} else if(category.getModerators() != null && category.getModerators().length > 0 
     				&& category.getModerators()[0].trim().length() > 0){
-  				if(propetyOfUser.isEmpty()) propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(currentUser_);
+  				if(propetyOfUser.isEmpty()) propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(null);
 					faqSetting_.setCanEdit(Utils.hasPermission(propetyOfUser, Arrays.asList(category.getModerators())));
   			}
   		}
   		if(!faqSetting_.isCanEdit() && category.getUserPrivate() != null && category.getUserPrivate().length > 0 
   				&& category.getUserPrivate()[0].trim().length() > 0) {
-  			if(propetyOfUser.isEmpty()) propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(currentUser_);
+  			if(propetyOfUser.isEmpty()) propetyOfUser = UserHelper.getAllGroupAndMembershipOfUser(null);
   			return Utils.hasPermission(propetyOfUser, Arrays.asList(category.getUserPrivate()));
   		}
 		} catch (Exception e) {
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UICategories.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UICategories.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UICategories.java	(working copy)
@@ -143,14 +143,14 @@
 		this.font_weight = new String[]{"bold", "none", "none"};
 	}
 	
-	private void setIsModerators(String currentUser_) throws Exception{
+	private void setIsModerators() throws Exception{
 		categoryMod.clear() ;
 		isModerator = false;
 		if(faqSetting_.isAdmin()) isModerator = true;
-		if(!isModerator) isModerator = faqService_.isCategoryModerator(categoryId_, currentUser_);
+		if(!isModerator) isModerator = faqService_.isCategoryModerator(categoryId_, null);
 		if(!isModerator) {
 			for(Category cat : listCate) {
-				categoryMod.put(cat.getId(), faqService_.isCategoryModerator(cat.getPath(), currentUser_)) ;
+				categoryMod.put(cat.getId(), faqService_.isCategoryModerator(cat.getPath(), null)) ;
 			}
 		}		
 	}
@@ -165,7 +165,7 @@
 		if(categoryMod.containsKey(categoryId)){
 			return categoryMod.get(categoryId) ;
 		} else {
-			boolean isMod = faqService_.isCategoryModerator(path, currentUser);
+			boolean isMod = faqService_.isCategoryModerator(path, null);
 			categoryMod.put(categoryId, isMod);
 			return isMod;
 		}
@@ -183,24 +183,23 @@
 		return faqService_.hasWatch(categoryPath) ;
 	}
 	
-	private void checkAndSetListCategory(String userName, String categoryId) throws Exception {
+	private void checkAndSetListCategory(String categoryId) throws Exception {
 		listCate = new ArrayList<Category>();
 		if(faqSetting_.isAdmin()) {
 			listCate.addAll(faqService_.getSubCategories(categoryId, faqSetting_, true, null));
 		}else {
 			listCate.addAll(faqService_.getSubCategories(categoryId, faqSetting_, false, 
-					UserHelper.getAllGroupAndMembershipOfUser(userName)));
+					UserHelper.getAllGroupAndMembershipOfUser(null)));
 		}
 	}
 	
 	private void setListCate() throws Exception {
 		if(!isSwap){
-			String userName = FAQUtils.getCurrentUser();
 			try {
-				checkAndSetListCategory(userName, categoryId_);
+				checkAndSetListCategory(categoryId_);
 	  	} catch (PathNotFoundException e) {
 	  		setPathCategory(parentCateID_);
-	  		checkAndSetListCategory(userName, categoryId_);
+	  		checkAndSetListCategory(categoryId_);
 	  	} catch (Exception e) {
 				e.printStackTrace();
 			}
@@ -213,7 +212,7 @@
 			if(currentCategoryName == null || currentCategoryName.trim().length() < 1) currentCategoryName = FAQUtils.getResourceBundle("UIBreadcumbs.label." + Utils.CATEGORY_HOME);
 			UIBreadcumbs breadcumbs = this.getAncestorOfType(UIAnswersContainer.class).getChild(UIBreadcumbs.class);
 			String[] listId = breadcumbs.getPath(breadcumbs.getBreadcumbs().size() - 1).split("/");
-			setIsModerators(userName);
+			setIsModerators();
 		}
 		isSwap = false;
 	}
@@ -230,9 +229,8 @@
 	
 	public void resetListCate() throws Exception{
 		isSwap = true;
-		String userName = FAQUtils.getCurrentUser();
-    checkAndSetListCategory(userName, parentCateID_);		
-		setIsModerators(userName);
+    checkAndSetListCategory(parentCateID_);		
+		setIsModerators();
 	}
 	
 	private String[] getActionCategory(String cateId){
@@ -463,7 +461,7 @@
 			String email = "" ;
 			String name = FAQUtils.getCurrentUser() ;
 			if(!FAQUtils.isFieldEmpty(name)){
-				email = FAQUtils.getEmailUser(name) ;
+			  email = FAQUtils.getEmailUser(null) ;
 			} else {
 				name = "";
 			}
@@ -518,7 +516,7 @@
 				Watch watch = new Watch();
 				String userName = FAQUtils.getCurrentUser();
 				watch.setUser(userName);
-				watch.setEmails(FAQUtils.getEmailUser(userName));
+				watch.setEmails(FAQUtils.getEmailUser(null));
 				uiCategories.faqService_.addWatchCategory(categoryId, watch);
 				uiApplication.addMessage(new ApplicationMessage("UIWatchForm.msg.successful", null, ApplicationMessage.INFO)) ;
 			} catch (Exception e) {
@@ -681,9 +679,8 @@
 				Category category = uiCategories.faqService_.getCategoryById(destCategoryId);
 				List<String> usersOfNewCateParent = new ArrayList<String>();
 				usersOfNewCateParent.addAll(Arrays.asList(category.getModerators())) ;
-				String user = FAQUtils.getCurrentUser() ;
-				if(uiCategories.faqSetting_.isAdmin() || (uiCategories.faqService_.isCategoryModerator(categoryId, user) && 
-						uiCategories.faqService_.isCategoryModerator(destCategoryId, user))){
+				if(uiCategories.faqSetting_.isAdmin() || (uiCategories.faqService_.isCategoryModerator(categoryId, null) && 
+						uiCategories.faqService_.isCategoryModerator(destCategoryId, null))){
 					uiCategories.faqService_.moveCategory(categoryId, destCategoryId) ;					
 				}else{
 					UIApplication uiApplication = uiCategories.getAncestorOfType(UIApplication.class) ;
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/FAQUtils.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/FAQUtils.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/FAQUtils.java	(working copy)
@@ -54,6 +54,8 @@
 import org.exoplatform.services.organization.UserProfile;
 import org.exoplatform.services.resources.LocaleConfig;
 import org.exoplatform.services.resources.LocaleConfigService;
+import org.exoplatform.services.security.ConversationState;
+import org.exoplatform.web.CacheUserProfileFilter;
 import org.exoplatform.webui.application.WebuiRequestContext;
 import org.exoplatform.webui.application.portlet.PortletRequestContext;
 import org.exoplatform.webui.core.UIComponent;
@@ -239,14 +241,37 @@
 		return Util.getPortalRequestContext().getRemoteUser();
 	}
 
-	static public String getEmailUser(String userName) throws Exception {
-		OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
-		User user = organizationService.getUserHandler().findUserByName(userName) ;
-		String email = user.getEmail() ;
-		return email;
-	}
+  static public User getCurrentUserObject() throws Exception {
+    ConversationState state = ConversationState.getCurrent();
+    return (User) state.getAttribute(CacheUserProfileFilter.USER_PROFILE);
+  }
+  /**
+   * 
+   * @param userName
+   * @return email of the user. The current user is implied if userName is null.
+   * @throws Exception
+   */
+  static public String getEmailUser(String userName) throws Exception {
+    if (userName == null) {
+      return getCurrentUserObject().getEmail();
+    } else {
+      OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
+      User user = organizationService.getUserHandler().findUserByName(userName);
+      String email = user.getEmail();
+      return email;
+    }
+  }
 
+  /**
+   * 
+   * @param userName
+   * @return Full name of user. The current user is implied if userName is null. 
+   * @throws Exception
+   */
 	static public String getFullName(String userName) throws Exception {
+    if (userName == null) {
+      return getCurrentUserObject().getFullName();
+    }
 		try{
 			OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
 			User user = organizationService.getUserHandler().findUserByName(userName) ;
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuestions.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuestions.java	(revision 72550)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/UIQuestions.java	(working copy)
@@ -16,8 +16,6 @@
  ***************************************************************************/
 package org.exoplatform.faq.webui;
 
-import java.io.UnsupportedEncodingException;
-import java.net.URLEncoder;
 import java.text.DecimalFormat;
 import java.util.ArrayList;
 import java.util.Date;
@@ -62,15 +60,11 @@
 import org.exoplatform.ks.common.webui.UIPopupAction;
 import org.exoplatform.ks.common.webui.UIPopupContainer;
 import org.exoplatform.ks.rss.RSS;
-import org.exoplatform.portal.application.PortalRequestContext;
 import org.exoplatform.services.organization.User;
 import org.exoplatform.web.application.ApplicationMessage;
-import org.exoplatform.web.application.URLBuilder;
-import org.exoplatform.webui.application.WebuiRequestContext;
 import org.exoplatform.webui.config.annotation.ComponentConfig;
 import org.exoplatform.webui.config.annotation.EventConfig;
 import org.exoplatform.webui.core.UIApplication;
-import org.exoplatform.webui.core.UIComponent;
 import org.exoplatform.webui.core.UIContainer;
 import org.exoplatform.webui.event.Event;
 import org.exoplatform.webui.event.EventListener;
@@ -342,7 +336,7 @@
 	}
 	
 	private void setIsModerators() throws Exception{
-		if(faqSetting_.isAdmin() || faqService_.isCategoryModerator(categoryId_, currentUser_)) canEditQuestion = true ;
+		if(faqSetting_.isAdmin() || faqService_.isCategoryModerator(categoryId_, null)) canEditQuestion = true ;
 		else canEditQuestion = false ;
 	}
 	
@@ -538,7 +532,7 @@
 			UICategoryForm category = uiPopupContainer.addChild(UICategoryForm.class, null, null) ;
 			if(!FAQUtils.isFieldEmpty(categoryId)) {
 				try {
-					if(question.faqSetting_.isAdmin() || question.faqService_.isCategoryModerator(categoryId, FAQUtils.getCurrentUser())) {
+					if(question.faqSetting_.isAdmin() || question.faqService_.isCategoryModerator(categoryId, null)) {
 						uiPopupAction.activate(uiPopupContainer, 580, 500) ;
 						uiPopupContainer.setId("SubCategoryForm") ;
 						category.setParentId(categoryId) ;
@@ -584,7 +578,7 @@
 			String userName = FAQUtils.getCurrentUser() ;
 			if(!FAQUtils.isFieldEmpty(userName)){
 				name = userName;
-				email = FAQUtils.getEmailUser(userName) ;
+				email = FAQUtils.getEmailUser(null) ;
 			}
 			questionForm.setFAQSetting(questions.faqSetting_) ;
 			questionForm.setAuthor(name) ;
Index: eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java
===================================================================
--- eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java	(revision 72550)
+++ eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java	(working copy)
@@ -30,6 +30,9 @@
 import org.exoplatform.services.organization.User;
 import org.exoplatform.services.organization.UserHandler;
 import org.exoplatform.services.organization.impl.GroupImpl;
+import org.exoplatform.services.security.ConversationState;
+import org.exoplatform.services.security.Identity;
+import org.exoplatform.services.security.MembershipEntry;
 
 /**
  * @author <a href="mailto:patrice.lamarque@exoplatform.com">Patrice Lamarque</a>
@@ -186,23 +189,41 @@
     return getOrganizationService().getMembershipHandler().findMembershipsByUser(userId);
   }
 
+  /**
+   * @param userId username
+   * @return list of groups an user belong, and memberships of the user in each
+   *         group. If userId is null, groups and memberships of the current
+   *         user will be returned.
+   * @throws Exception
+   */
   @SuppressWarnings("unchecked")
   public static List<String> getAllGroupAndMembershipOfUser(String userId) throws Exception {
     List<String> listOfUser = new ArrayList<String>();
     if (userId == null) {
-      return listOfUser; // should we throw an IllegalArgumentException instead ?
+      ConversationState conversionState = ConversationState.getCurrent();
+      Identity identity = conversionState.getIdentity();
+      userId = identity.getUserId();
+      if (userId != null) {
+        listOfUser.add(userId);
+        String value = "";
+        for (MembershipEntry membership : identity.getMemberships()) {
+          value = membership.getGroup();
+          listOfUser.add(value); // its groups
+          value = membership.getMembershipType() + ":" + value;
+          listOfUser.add(value); // its memberships
+        }
+      }
+    } else {
+      listOfUser.add(userId); // himself
+      String value = "";
+      Collection<Membership> memberships = findMembershipsByUser(userId);
+      for (Membership membership : memberships) {
+        value = membership.getGroupId();
+        listOfUser.add(value); // its groups
+        value = membership.getMembershipType() + ":" + value;
+        listOfUser.add(value); // its memberships
+      }
     }
-
-    listOfUser.add(userId); // himself
-    String value = "";
-    Collection<Membership> memberships = findMembershipsByUser(userId);
-    for (Membership membership : memberships) {
-      value = membership.getGroupId();
-      listOfUser.add(value); // its groups
-      value = membership.getMembershipType() + ":" + value;
-      listOfUser.add(value); // its memberships
-    }
-
     return listOfUser;
   }
 
