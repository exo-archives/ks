<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright (C) 2009 eXo Platform SAS.

    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 2.1 of
    the License, or (at your option) any later version.

    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd"
  xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

  <component>
  	<key>org.exoplatform.services.cache.CacheService</key>
    <jmx-name>cache:type=CacheService</jmx-name>
  	<type>org.exoplatform.services.cache.impl.CacheServiceImpl</type>
  	<init-params>
      <object-param>
        <name>cache.config.default</name>
        <description>The default cache configuration</description>
        <object type="org.exoplatform.services.cache.ExoCacheConfig">
          <field name="name"><string>default</string></field>
          <field name="maxSize"><int>30000</int></field>
          <field name="liveTime"><long>60000</long></field>
          <field name="distributed"><boolean>false</boolean></field>
          <field name="implementation"><string>org.exoplatform.services.cache.concurrent.ConcurrentFIFOExoCache</string></field>
        </object>
      </object-param>
    </init-params>
  </component>

  <component>
     <key>org.exoplatform.services.security.Authenticator</key>
     <type>org.exoplatform.services.organization.auth.OrganizationAuthenticatorImpl</type>
  </component>

  <component>
     <key>org.exoplatform.services.listener.ListenerService</key>
     <type>org.exoplatform.services.listener.ListenerService</type>
  </component>

  <component>
    <key>org.exoplatform.commons.chromattic.ChromatticManager</key>
    <type>org.exoplatform.commons.chromattic.ChromatticManager</type>
  </component>

  <component>
    <key>org.exoplatform.portal.pom.config.POMSessionManager</key>
    <type>org.exoplatform.portal.pom.config.POMSessionManager</type>
  </component>

  <component>
    <key>org.exoplatform.portal.pom.data.ModelDataStorage</key>
    <type>org.exoplatform.portal.pom.config.POMDataStorage</type>
  </component>

  <component>
    <key>org.exoplatform.portal.config.DataStorage</key>
    <type>org.exoplatform.portal.config.DataStorageImpl</type>
  </component>
  
   <component>
      <key>org.exoplatform.services.jcr.ext.distribution.DataDistributionManager</key>
      <type>org.exoplatform.services.jcr.ext.distribution.impl.DataDistributionManagerImpl</type>     
  </component>

  <component>
    <key>org.exoplatform.services.jcr.ext.hierarchy.NodeHierarchyCreator</key>
    <type>org.exoplatform.services.jcr.ext.hierarchy.impl.NodeHierarchyCreatorImpl</type>
  </component>
  
  <component>
      <key>org.exoplatform.services.organization.OrganizationService</key>
     <type>org.exoplatform.commons.testing.mock.SimpleMockOrganizationService</type>
  </component>

  <component>
    <key>org.exoplatform.portal.config.UserACL</key>
    <type>org.exoplatform.portal.config.UserACL</type>
    <init-params>
      <value-param>
        <name>super.user</name>
        <description>administrator</description>
        <value>root</value>
      </value-param>
      <value-param>
        <name>guests.group</name>
        <description>guests group</description>
        <value>/platform/guests</value>
      </value-param>
      <value-param>
        <name>navigation.creator.membership.type</name>
        <description>specific membership type have full permission with group navigation</description>
        <value>manager</value>
      </value-param>
    </init-params>
  </component>

  <external-component-plugins>
 		<target-component>org.exoplatform.services.jcr.RepositoryService</target-component>
 		<component-plugin>
 		  <name>add.namespaces</name>
 		  <set-method>addPlugin</set-method>
 		  <type>org.exoplatform.services.jcr.impl.AddNamespacesPlugin</type>
 		  <init-params>
 		    <properties-param>
 		      <name>namespaces</name>
          <property name="gtn" value="http://www.gatein.org/jcr/gatein/1.0/"/>
          <property name="mop" value="http://www.gatein.org/jcr/mop/1.0/"/>
 		      </properties-param>
 		  </init-params>
 		</component-plugin>
 		<component-plugin>
 		  <name>add.nodeType</name>
 		  <set-method>addPlugin</set-method>
 		  <type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
 		  <init-params>
 		    <values-param>
 		      <name>autoCreatedInNewRepository</name>
 		      <description>Node types configuration file</description>
           <value>jar:/conf/gatein-nodetypes.xml</value>
           <value>jar:/conf/mop-nodetypes.xml</value>
           <value>jar:/conf/content-nodetypes.xml</value>
 		    </values-param>
 		  </init-params>
 		</component-plugin>
  </external-component-plugins>

    <external-component-plugins>
    <target-component>org.exoplatform.services.organization.OrganizationService</target-component>
    <component-plugin>
      <name>new.user.event.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.services.organization.impl.NewUserEventListener</type>
      <description>this listener assign group and membership to a new created user</description>
      <init-params>
        <object-param>
          <name>configuration</name>
          <description>description</description>
          <object type="org.exoplatform.services.organization.impl.NewUserConfig">
            <field  name="group">
              <collection type="java.util.ArrayList">
                <value>
                  <object type="org.exoplatform.services.organization.impl.NewUserConfig$JoinGroup">
                    <field  name="groupId"><string>/platform/users</string></field>
                    <field  name="membership"><string>member</string></field>
                  </object>
                </value>
              </collection>
            </field>
            <field  name="ignoredUser">
              <collection type="java.util.HashSet">
                <value><string>root</string></value>
                <value><string>john</string></value>
                <value><string>mary</string></value>
                <value><string>demo</string></value>
              </collection>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
    <component-plugin>
      <name>user.portal.config.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.portal.config.UserPortalConfigListener</type>
    </component-plugin>
    <component-plugin>
      <name>group.portal.config.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.portal.config.GroupPortalConfigListener</type>
    </component-plugin>
  </external-component-plugins>

</configuration>
