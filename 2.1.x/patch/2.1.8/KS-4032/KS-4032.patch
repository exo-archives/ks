Index: eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java
===================================================================
--- eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(revision 79116)
+++ eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(working copy)
@@ -1913,16 +1913,24 @@
           }
         }
       }
-      parent.getSession().save();
-      iter = getCategoriesIterator(parent);
+      parent.save();
+    } else {
+      goingCategory.setProperty("exo:index", iter.getSize());
+      goingCategory.save();
     }
+    reUpdateIndex(parent);
+  }
+
+  private void reUpdateIndex(Node parentCateNode) throws Exception {
+    NodeIterator iter = getCategoriesIterator(parentCateNode);
     long i = 1;
+    Node node;
     while (iter.hasNext()) {
       node = iter.nextNode();
       node.setProperty("exo:index", i);
       i++;
     }
-    parent.save();
+    parentCateNode.save();
   }
 
   /* (non-Javadoc)
@@ -1943,16 +1951,16 @@
         newCategory = getFAQServiceHome(sProvider).getNode(cat.getPath()) ;
       }
       long index = cat.getIndex();
-      boolean isResetIndex = (isAddNew || newCategory.getProperty("exo:index").getLong() != index);
-      long size = 0;
+      long oldIndex = new PropertyReader(newCategory).l("exo:index", newCategory.getParent().getNodes().getSize());
+      boolean isResetIndex = (isAddNew || (oldIndex != index));
       if (isResetIndex) {
-        size = newCategory.getParent().getNodes().getSize();
-        cat.setIndex(size);
+        cat.setIndex(oldIndex);
       }
       saveCategory(newCategory, cat, isAddNew, sProvider);
       if (isResetIndex) {
-        resetIndex(newCategory, index, size);
-      }			
+        index = (index < oldIndex) ? index - 1 : index;
+        resetIndex(newCategory, index, oldIndex);
+      }	
     }catch (Exception e) {
       log.error("Failed to save category: ", e);
     }
@@ -2000,8 +2008,12 @@
     SessionProvider sProvider = CommonUtils.createSystemProvider();
     try {
       Node faqHome = getFAQServiceHome(sProvider) ;
-      faqHome.getNode(categoryId).remove() ;
+      Node node = faqHome.getNode(categoryId);
+      Node parent = node.getParent();
+      node.remove() ;
       faqHome.save() ;
+      //update index
+      reUpdateIndex(parent);
     }catch (Exception e) {
       log.error("Can not remove category has id: " + categoryId);
     }	
@@ -2275,17 +2287,18 @@
   public void moveCategory(String categoryId, String destCategoryId) throws Exception {
     SessionProvider sProvider = CommonUtils.createSystemProvider();
     try {
-      Node faqHome = getFAQServiceHome(sProvider) ;
-      Node srcNode = faqHome.getNode(categoryId) ;
-      String srcPath = srcNode.getPath() ;
+      Node faqHome = getFAQServiceHome(sProvider);
+      Node srcNode = faqHome.getNode(categoryId);
+      Node parentNode = srcNode.getParent();
+      String srcPath = srcNode.getPath();
       String destPath = faqHome.getPath() + "/" + destCategoryId + "/" + srcNode.getName();
-      faqHome.getSession().move(srcPath, destPath) ;
-      faqHome.getSession().save() ;
-      Node destNode = faqHome.getNode(destCategoryId + "/" + srcNode.getName()) ;
-      destNode.setProperty("exo:index", destNode.getParent().getNodes().getSize()) ;
-      destNode.save() ;
-      //resetIndex(category, index)
-      // Should be update moderators for moving category
+      faqHome.getSession().move(srcPath, destPath);
+      faqHome.getSession().save();
+      Node destNode = faqHome.getNode(destCategoryId + "/" + srcNode.getName());
+      destNode.setProperty("exo:index", destNode.getParent().getNodes().getSize());
+      destNode.save();
+      // update index for children categories of parent category moved. 
+      reUpdateIndex(parentNode);
     }catch (ItemExistsException e){ 
       throw e ;
     } catch (Exception e) {
@@ -3133,6 +3146,7 @@
         resetIndex(goingCategory, index, gindex);
       } else {
         String id = goingCategory.getName();
+        Node parentNode = goingCategory.getParent();
         mockCategory.getSession().move(goingCategory.getPath(), mockCategory.getParent().getPath() + "/" + id);
         faqHome.getSession().save();
         Node parent = mockCategory.getParent();
@@ -3144,6 +3158,8 @@
           parent.save();
         }
         resetIndex(destCat, index, l);
+        // update index for children categories of parent category moved.
+        reUpdateIndex(parentNode);
       }
     } catch (Exception e) {
       log.error("Failed to swap categories", e);
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICategoryForm.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICategoryForm.java	(revision 79116)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UICategoryForm.java	(working copy)
@@ -50,6 +50,7 @@
 import org.exoplatform.webui.form.UIFormTextAreaInput;
 import org.exoplatform.webui.form.UIFormInputWithActions.ActionData;
 import org.exoplatform.webui.form.validator.MandatoryValidator;
+import org.exoplatform.webui.form.validator.PositiveNumberFormatValidator;
 import org.exoplatform.webui.organization.account.UIUserSelector;
 
 /**
@@ -97,6 +98,7 @@
   final private static String USER_SELECTOR_POPUPWINDOW = "UICategoryUserPopupWindow";
   private boolean isAddNew_ = true ;
   private String oldName_ = "";
+  private long oldIndex_ = 0;
   private Category currentCategory_ ;
   private long maxIndex = 1;
 	public UICategoryForm() throws Exception {
@@ -108,6 +110,7 @@
     UIFormInputWithActions inputset = new UIFormInputWithActions(CATEGORY_DETAIL_TAB) ;
     inputset.addUIFormInput(new UIFormStringInput(FIELD_NAME_INPUT, FIELD_NAME_INPUT, null).addValidator(MandatoryValidator.class)) ;
     UIFormStringInput index = new UIFormStringInput(FIELD_INDEX_INPUT, FIELD_INDEX_INPUT, null) ;
+    index.addValidator(PositiveNumberFormatValidator.class);
     maxIndex = getFAQService().getMaxindexCategory(parentId_) + 1;
     if(isAddNew)index.setValue(String.valueOf(maxIndex));
     inputset.addUIFormInput(index) ;
@@ -164,6 +167,7 @@
 			categoryId_ = cat.getPath() ; 
 			currentCategory_ = cat ;
 			oldName_ = cat.getName() ;
+			oldIndex_ = cat.getIndex() ;
 			if(oldName_ != null && oldName_.trim().length() > 0) getUIStringInput(FIELD_NAME_INPUT).setValue(oldName_) ;
 			else getUIStringInput(FIELD_NAME_INPUT).setValue("Root") ;
 			String userPrivate = null;
@@ -218,20 +222,19 @@
       		return ;
         }
       }
-      
-      long index = 1;
-      String strIndex = uiCategory.getUIStringInput(FIELD_INDEX_INPUT).getValue() ;
-      if(strIndex != null && strIndex.trim().length() > 0) {
-      	try {
-	        index = Long.parseLong(strIndex);
-        } catch (Exception e){
-        	uiCategory.warning("NameValidator.msg.erro-large-number", new String[]{uiCategory.getLabel(FIELD_INDEX_INPUT)}) ;
-	        return ;
+      long index = uiCategory.oldIndex_;
+      uiCategory.maxIndex = uiCategory.getFAQService().getMaxindexCategory(uiCategory.parentId_) + 1;
+      String strIndex = uiCategory.getUIStringInput(FIELD_INDEX_INPUT).getValue();
+      if (!FAQUtils.isFieldEmpty(strIndex)) {
+        index = Long.parseLong(strIndex);
+        if (index > uiCategory.maxIndex) {
+          index = uiCategory.maxIndex;
         }
+      } else if (uiCategory.isAddNew_) {
+        index = uiCategory.maxIndex;
       }
-      if(index > uiCategory.maxIndex) index = uiCategory.maxIndex;
+      
       String description = uiCategory.getUIFormTextAreaInput(FIELD_DESCRIPTION_INPUT).getValue() ;
-     
       String moderator = uiCategory.getUIFormTextAreaInput(FIELD_MODERATOR_INPUT).getValue() ;
       if (moderator == null || moderator.trim().length() <= 0) {
       	uiCategory.warning("UICategoryForm.msg.moderator-required") ;
