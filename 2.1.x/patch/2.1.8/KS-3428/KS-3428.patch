Index: eXoApplication/faq/service/src/test/java/org/exoplatform/faq/test/AnswerDummyOrganizationService.java
===================================================================
--- eXoApplication/faq/service/src/test/java/org/exoplatform/faq/test/AnswerDummyOrganizationService.java	(revision 0)
+++ eXoApplication/faq/service/src/test/java/org/exoplatform/faq/test/AnswerDummyOrganizationService.java	(revision 0)
@@ -0,0 +1,30 @@
+/*
+ * Copyright (C) 2003-2012 eXo Platform SAS.
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU Affero General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU Affero General Public License for more details.
+ *
+ * You should have received a copy of the GNU Affero General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+package org.exoplatform.faq.test;
+
+import org.exoplatform.services.organization.impl.mock.DummyOrganizationService;
+
+/**
+ * Created by The eXo Platform SAS
+ * Author : eXoPlatform
+ *          exo@exoplatform.com
+ * Feb 2, 2012  
+ */
+public class AnswerDummyOrganizationService extends DummyOrganizationService {
+  public void start() {
+  }
+}
Index: eXoApplication/faq/service/src/test/resources/conf/portal/test-configuration.xml
===================================================================
--- eXoApplication/faq/service/src/test/resources/conf/portal/test-configuration.xml	(revision 79220)
+++ eXoApplication/faq/service/src/test/resources/conf/portal/test-configuration.xml	(working copy)
@@ -192,12 +192,11 @@
     </init-params>
   </component>
   -->
-<!--
+
 	<component>
 	  <key>org.exoplatform.services.organization.OrganizationService</key>
-	  <type>org.exoplatform.services.organization.jdbc.OrganizationServiceImpl</type>
+	  <type>org.exoplatform.faq.test.AnswerDummyOrganizationService</type>
  	</component>
--->
 
  <external-component-plugins>
     <target-component>org.exoplatform.ks.common.jcr.KSDataLocation</target-component>
Index: eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java
===================================================================
--- eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(revision 79220)
+++ eXoApplication/faq/service/src/main/java/org/exoplatform/faq/service/impl/JCRDataStorage.java	(working copy)
@@ -115,6 +115,8 @@
 public class JCRDataStorage implements DataStorage {
 
   private static final Log log = ExoLogger.getLogger(JCRDataStorage.class);
+  
+  public static final String      SEMICOLON            = ";";
 
   final private static String MIMETYPE_TEXTHTML = "text/html".intern() ;
   @SuppressWarnings("unused")
@@ -2083,11 +2085,30 @@
   public List<String> getListCateIdByModerator(String user) throws Exception {
     SessionProvider sProvider = CommonUtils.createSystemProvider();
     try {
+      List<String> allOfUser = UserHelper.getAllGroupAndMembershipOfUser(user);
+      StringBuilder builder = new StringBuilder();
+      int i = 0;
+      if (allOfUser != null && allOfUser.size() > 0) {
+        builder.append(" ( ");
+        for (String strUser : allOfUser) {
+          strUser = strUser.trim();
+          if (strUser.length() > 0) {
+            if (i > 0) {
+              builder.append(" or ");
+              i = 1;
+            }
+            builder.append("@").append("exo:moderators").append("= '").append(strUser).append("' ");
+          }
+          i++;
+        }
+        builder.append(" ) ");
+        builder.append(" and @exo:isView='true'  ");
+      }
+      
       Node categoryHome = getCategoryHome(sProvider, null) ;
       QueryManager qm = categoryHome.getSession().getWorkspace().getQueryManager();
-      StringBuffer queryString = new StringBuffer("/jcr:root").append(categoryHome.getParent().getPath()). 
-      append("//element(*,exo:faqCategory)[@exo:moderators='").
-      append(user.trim()).append("'").append(" and @exo:isView='true' ]") ;
+      StringBuffer queryString = new StringBuffer("/jcr:root").append(categoryHome.getParent() .getPath())
+                                                           .append("//element(*,exo:faqCategory)[ " + builder.toString() + " ]");
       Query query = qm.createQuery(queryString.toString(), Query.XPATH);
       QueryResult result = query.execute();
       NodeIterator iter = result.getNodes() ;
@@ -2095,7 +2116,7 @@
       while(iter.hasNext()) {
         Node cate = iter.nextNode() ;
         try{
-          listCateId.add(cate.getName() + cate.getProperty("exo:name").getString()) ;
+          listCateId.add(cate.getName() + SEMICOLON + cate.getProperty("exo:name").getString());
         }catch(Exception e) {
           log.debug("Getting property of " + cate + " node failed: ", e);
         }				
Index: eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java
===================================================================
--- eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java	(revision 79220)
+++ eXoApplication/faq/webapp/src/main/java/org/exoplatform/faq/webui/popup/UIQuestionsInfo.java	(working copy)
@@ -71,25 +71,46 @@
 
 @SuppressWarnings("unused")
 public class UIQuestionsInfo extends BaseUIFAQForm implements UIPopupComponent {
-  private static final String LIST_QUESTION_INTERATOR = "FAQUserPageIteratorTab1" ;
-  private static final String LIST_QUESTION_NOT_ANSWERED_INTERATOR = "FAQUserPageIteratorTab2" ;
-  private static final String LIST_CATEGORIES = "ListCategories";
-  private FAQSetting faqSetting_ = new FAQSetting();
-  private JCRPageList pageList ;
-  private JCRPageList pageListNotAnswer ;
-  private UIAnswersPageIterator pageIterator ;
-  private UIAnswersPageIterator pageQuesNotAnswerIterator ;
-  private List<Question> listQuestion_ = new ArrayList<Question>() ;
-  private List<Question> listQuestionNotYetAnswered_ = new ArrayList<Question>() ;
-  private List<SelectItemOption<String>> listCategories = new ArrayList<SelectItemOption<String>>() ;
-  private long pageSelect = 1 ;
-  private long pageSelectNotAnswer = 1 ;
-  private List<String> moderateCates  = new ArrayList<String>() ;
-  private boolean isEditTab_ = true ;
-  private boolean isResponseTab_ = false ;
-  private boolean isChangeTab_ = false;
-  private String cateId_ = Utils.ALL;
+  private static final String            LIST_QUESTION_INTERATOR              = "FAQUserPageIteratorTab1";
+
+  private static final String            LIST_QUESTION_NOT_ANSWERED_INTERATOR = "FAQUserPageIteratorTab2";
+
+  private static final String            LIST_CATEGORIES                      = "ListCategories";
+
+  private FAQSetting                     faqSetting_                          = new FAQSetting();
+
+  private JCRPageList                    pageList;
+
+  private JCRPageList                    pageListNotAnswer;
+
+  private UIAnswersPageIterator          pageIterator;
+
+  private UIAnswersPageIterator          pageQuesNotAnswerIterator;
+
+  private List<Question>                 listQuestion_                        = new ArrayList<Question>();
+
+  private List<Question>                 listQuestionNotYetAnswered_          = new ArrayList<Question>();
+
+  private List<SelectItemOption<String>> listCategories                       = new ArrayList<SelectItemOption<String>>();
+
+  private long                           pageSelect                           = 1;
+
+  private long                           pageSelectNotAnswer                  = 1;
+
+  private List<String>                   moderateCates                        = new ArrayList<String>();
+
+  private boolean                        isEditTab_                           = true;
+
+  private boolean                        isResponseTab_                       = false;
+
+  private boolean                        isChangeTab_                         = false;
+
+  private String                         cateId_                              = Utils.ALL;
+
+  public static final String             SEMICOLON                            = ";";
   
+  
+  
   public void activate() throws Exception { }
   public void deActivate() throws Exception { }
   
@@ -134,8 +155,9 @@
   		moderateCates.clear() ;
   		for(String str : listCate) {
   			try{
-  				this.listCategories.add(new SelectItemOption<String>(str.substring(40), str.substring(0, 40))) ;
-    			moderateCates.add(str.substring(0,40)) ;
+  			  int idxOfSemicolon = str.indexOf(SEMICOLON) ;
+          this.listCategories.add(new SelectItemOption<String>(str.substring(idxOfSemicolon + 1), str.substring(0, idxOfSemicolon)));
+          moderateCates.add(str.substring(0, idxOfSemicolon));
   			}catch(StringIndexOutOfBoundsException e) {
   				if(str.indexOf(Utils.CATEGORY_HOME) == 0) {
   					this.listCategories.add(new SelectItemOption<String>(str.substring(Utils.CATEGORY_HOME.length()), Utils.CATEGORY_HOME)) ;
Index: eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java
===================================================================
--- eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java	(revision 79220)
+++ eXoApplication/common/src/main/java/org/exoplatform/ks/common/UserHelper.java	(working copy)
@@ -21,7 +21,7 @@
 import java.util.List;
 
 import org.exoplatform.commons.utils.PageList;
-import org.exoplatform.container.PortalContainer;
+import org.exoplatform.container.ExoContainerContext;
 import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.organization.Group;
 import org.exoplatform.services.organization.GroupHandler;
@@ -41,7 +41,8 @@
 public class UserHelper {
 
   public static OrganizationService getOrganizationService() {
-    OrganizationService organizationService = (OrganizationService) PortalContainer.getComponent(OrganizationService.class);
+    OrganizationService organizationService = (OrganizationService) ExoContainerContext.getCurrentContainer()
+                                                .getComponentInstanceOfType(OrganizationService.class);
     return organizationService;
   }
 
